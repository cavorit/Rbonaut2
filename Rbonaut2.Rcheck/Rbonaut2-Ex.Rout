
R version 3.2.5 (2016-04-14) -- "Very, Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Rbonaut2"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Rbonaut2')
Loading required package: data.table
Loading required package: RPostgreSQL
Loading required package: DBI
Loading required package: sfsmisc

Attaching package: ‘sfsmisc’

The following object is masked from ‘package:data.table’:

    last

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("erstelleRaschMatrixSkeleton")
> ### * erstelleRaschMatrixSkeleton
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: erstelleRaschMatrixSkeleton
> ### Title: erstelleRaschMatrixSkeleton
> ### Aliases: erstelleRaschMatrixSkeleton
> 
> ### ** Examples
> 
> rm(list=ls())
> DF <- data.frame(c("SessionA", "SessionB"), c(22, 90), c(23, 18), c(10,12))
> colnames(DF) <- c("idS", "It1", "It2", "It_von_wo_ganz_anders")
> ItemIDNamen <- c("Item1", "Item2", "Item3")
> print(DF)
       idS It1 It2 It_von_wo_ganz_anders
1 SessionA  22  23                    10
2 SessionB  90  18                    12
> erstelleRaschMatrixSkeleton(DF=DF, ItemIDNamen=ItemIDNamen)
     Item1 Item2 Item3
> 
> 
> 
> 
> cleanEx()
> nameEx("getAdrWAlsListe")
> ### * getAdrWAlsListe
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getAdrWAlsListe
> ### Title: getAdrWAlsListe
> ### Aliases: getAdrWAlsListe
> 
> ### ** Examples
> 
> adrW <- c("{1, 2, 3, 4}", "{11, 12, 13, 14}")
> getAdrWAlsListe(adrW = adrW)
[[1]]
[1] 1 2 3 4

[[2]]
[1] 11 12 13 14

> 
> 
> 
> cleanEx()
> nameEx("getFirstAdrW")
> ### * getFirstAdrW
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getFirstAdrW
> ### Title: getFirstArdW
> ### Aliases: getFirstAdrW
> 
> ### ** Examples
> 
> getFirstAdrW(adrW=c("{2, 4, 5}", "{12, 19}", "{4}"))
[1]  2 12  4
> 
> 
> 
> cleanEx()
> nameEx("getNachname")
> ### * getNachname
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getNachname
> ### Title: getNachname
> ### Aliases: getNachname
> 
> ### ** Examples
> 
> Spielername <- c("Fiedler, Harald", "Mayer, Jan", "A-Team")
> getNachname(Spielername = Spielername)
[1] "Fiedler" "Mayer"   NA       
> 
> 
> 
> cleanEx()
> nameEx("getSessionTimeStamp")
> ### * getSessionTimeStamp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getSessionTimeStamp
> ### Title: getSessionTimeStamp
> ### Aliases: getSessionTimeStamp
> 
> ### ** Examples
> 
> DatumString <- c("2015-08-27 18:59:25.328383+02", "2015-08-27 18:59:25.328383+02", "2015-08-27 18:59:25.328383+02")
> 
> 
> 
> cleanEx()
> nameEx("getVorname")
> ### * getVorname
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getVorname
> ### Title: getVorname
> ### Aliases: getVorname
> 
> ### ** Examples
> 
> Spielername <- c("Fiedler, Harald", "Mayer, Jan", "A-Team")
> getVorname(Spielername = Spielername)
[1] "Harald" "Jan"    NA      
> 
> 
> 
> cleanEx()
> nameEx("gibZahlFuehrendeNullen")
> ### * gibZahlFuehrendeNullen
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: gibZahlFuehrendeNullen
> ### Title: gibZahlFuehrendeNullen
> ### Aliases: gibZahlFuehrendeNullen
> 
> ### ** Examples
> 
> k = c(2, 7, 17, 299)
> gibZahlFuehrendeNullen(k=k, digits=9)
[1] "000000002" "000000007" "000000017" "000000299"
> 
> 
> 
> cleanEx()
> nameEx("istFormatNachnameKommaVorname")
> ### * istFormatNachnameKommaVorname
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: istFormatNachnameKommaVorname
> ### Title: istFormatNachnameKommaVorname
> ### Aliases: istFormatNachnameKommaVorname
> 
> ### ** Examples
> 
> Spielername <- c("Fiedler, Harald", "Mayer, Jan", "A-Team")
> istFormatNachnameKommaVorname(Spielername = Spielername)
[1]  TRUE  TRUE FALSE
> 
> 
> 
> cleanEx()
> nameEx("itemID2Params")
> ### * itemID2Params
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: itemID2Params
> ### Title: itemID2Params
> ### Aliases: itemID2Params
> 
> ### ** Examples
> 
> itemID2Params("BL03")
$adrB
[1] 10

$sLsRvA
[1] 50 60  4

$adrW
[1] 22

$adrCol
[1] "#FF8800"

$colorExpiration
[1] 2195

> 
> 
> 
> cleanEx()
> nameEx("playedAngle")
> ### * playedAngle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: playedAngle
> ### Title: playedAngle
> ### Aliases: playedAngle
> 
> ### ** Examples
> 
> adrA=10
> adrB=18
> plotFBN()
> playedAngle(adrA=adrA, adrB=adrB)
[1] 40
> 
> 
> 
> cleanEx()
> nameEx("plotFBN")
> ### * plotFBN
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotFBN
> ### Title: plotFBN
> ### Aliases: plotFBN
> 
> ### ** Examples
> 
> plotFBN(Adresses=FALSE)
> 
> 
> 
> 
> cleanEx()
> nameEx("readAUGMENTED")
> ### * readAUGMENTED
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: readAUGMENTED
> ### Title: readAUGMENTED
> ### Aliases: readAUGMENTED
> 
> ### ** Examples
> 
> #Dateiname = "RAW-2015-04"
> #head(readAUGMENTED(Dateiname = Dateiname))
> 
> 
> 
> 
> cleanEx()
> nameEx("readItemBank")
> ### * readItemBank
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: readItemBank
> ### Title: readItemBank
> ### Aliases: readItemBank
> 
> ### ** Examples
> 
> ItemBank <- readItemBank()
> head(ItemBank)
  ItemID ICCa       ICCb ICCc ICCd
1   CS01    1  0.0000000    0    1
2   CS02    1  1.4700236    0    1
3   CS03    1 -0.7700552    0    1
4   CS04    1  0.2591781    0    1
5   CS05    1 -0.4609686    0    1
6   CS06    1 -0.7415591    0    1
> 
> 
> 
> cleanEx()
> nameEx("readRAW")
> ### * readRAW
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: readRAW
> ### Title: readRAW
> ### Aliases: readRAW
> 
> ### ** Examples
> 
> Dateiname = "RAW-2015-04"
> #head(readRAW(Dateiname = Dateiname))
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.276 0.02 0.296 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
