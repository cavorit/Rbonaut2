
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Rbonaut2"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Rbonaut2')
Loading required package: data.table
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("SQL2DF")
> ### * SQL2DF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: SQL2DF
> ### Title: SQL2DF
> ### Aliases: SQL2DF
> 
> ### ** Examples
> 
> message("Ich lade den R-Paket-internen RAW-Datensatz: Footbonaut_Datenabfrage_RicoWehrle.csv")
Ich lade den R-Paket-internen RAW-Datensatz: Footbonaut_Datenabfrage_RicoWehrle.csv
> Pfad <- system.file("extdata", package="Rbonaut2", "Footbonaut_Datenabfrage_RicoWehrle.csv")
> SQL <- read.csv2(file=Pfad, sep = ",", stringsAsFactors = FALSE, encoding = "utf8")
> DF <- SQL2DF(SQL=SQL)

Erstelle Schlüßel
... erstellt

Erstelle Biographie (= nichtintegres bzw. weiches idP)
... erstellt

Erstelle itemdefinierende Variablen
... erstellt

Erstelle technische misc
... erstellt

Erstelle Item-Response
... erstellt

Erstelle Sonstiges
... erstellt

Erstelle nB
... erstellt

Erstelle Reaktionswinkel
... fertig
> head(DF)
                                 idS                                   idB idX
1 FBN-Hoffenheim-2015-08-27-09:03:22 FBN-Hoffenheim-2015-08-27-09:03:22-B0   0
2 FBN-Hoffenheim-2015-08-27-09:03:22 FBN-Hoffenheim-2015-08-27-09:03:22-B1   1
3 FBN-Hoffenheim-2015-08-27-09:03:22 FBN-Hoffenheim-2015-08-27-09:03:22-B2   2
4 FBN-Hoffenheim-2015-08-27-09:03:22 FBN-Hoffenheim-2015-08-27-09:03:22-B3   3
5 FBN-Hoffenheim-2015-08-27-09:03:22 FBN-Hoffenheim-2015-08-27-09:03:22-B4   4
6 FBN-Hoffenheim-2015-08-27-09:03:22 FBN-Hoffenheim-2015-08-27-09:03:22-B5   5
           idFBN          Name Nachname Vorname   Position         team adrM
1 FBN-Hoffenheim Linder, Sarai   Linder   Sarai midfielder Frauen 2. BL   64
2 FBN-Hoffenheim Linder, Sarai   Linder   Sarai midfielder Frauen 2. BL   28
3 FBN-Hoffenheim Linder, Sarai   Linder   Sarai midfielder Frauen 2. BL   64
4 FBN-Hoffenheim Linder, Sarai   Linder   Sarai midfielder Frauen 2. BL   28
5 FBN-Hoffenheim Linder, Sarai   Linder   Sarai midfielder Frauen 2. BL   28
6 FBN-Hoffenheim Linder, Sarai   Linder   Sarai midfielder Frauen 2. BL   46
  adrW isMultiTarget MultiTarg sL sR vA  AW   RW Delay LED SND adrOut FBq  FBt
1   66         FALSE      {66} 45 45  2 -10   NA   950   t   t     66   1 2920
2   40         FALSE      {40} 45 45  2 -60 -170   950   t   t     40   1 2674
3    2         FALSE       {2} 45 45  2 -50 -120   950   t   t      2   1 2200
4   18         FALSE      {18} 45 45  2  50 -130   950   t   t     18   1 2530
5   34         FALSE      {34} 45 45  2 -30  -50   950   t   t     34   1 2170
6   44         FALSE      {44} 45 45  2  10  -60   950   t   t     44   1 2505
  Fiedler2012 goal.under.5000ms       date JSONfile comments nB adrLast
1       19881                 1 2015-08-27       NA       NA 11      NA
2       19881                 1 2015-08-27       NA       NA 11      66
3       19881                 1 2015-08-27       NA       NA 11      40
4       19881                 1 2015-08-27       NA       NA 11       2
5       19881                 1 2015-08-27       NA       NA 11      18
6       19881                 1 2015-08-27       NA       NA 11      34
> 
> 
> 
> cleanEx()
> nameEx("getAdrWAlsListe")
> ### * getAdrWAlsListe
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getAdrWAlsListe
> ### Title: getAdrWAlsListe
> ### Aliases: getAdrWAlsListe
> 
> ### ** Examples
> 
> adrW <- c("{1, 2, 3, 4}", "{11, 12, 13, 14}")
> getAdrWAlsListe(adrW = adrW)
[[1]]
[1] 1 2 3 4

[[2]]
[1] 11 12 13 14

> 
> 
> 
> cleanEx()
> nameEx("getFirstAdrW")
> ### * getFirstAdrW
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getFirstAdrW
> ### Title: getFirstArdW
> ### Aliases: getFirstAdrW
> 
> ### ** Examples
> 
> getFirstAdrW(adrW=c("{2, 4, 5}", "{12, 19}", "{4}"))
[1]  2 12  4
> 
> 
> 
> cleanEx()
> nameEx("getNachname")
> ### * getNachname
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getNachname
> ### Title: getNachname
> ### Aliases: getNachname
> 
> ### ** Examples
> 
> Spielername <- c("Fiedler, Harald", "Mayer, Jan", "A-Team")
> getNachname(Spielername = Spielername)
[1] "Fiedler" "Mayer"   NA       
> 
> 
> 
> cleanEx()
> nameEx("getSessionTimeStamp")
> ### * getSessionTimeStamp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getSessionTimeStamp
> ### Title: getSessionTimeStamp
> ### Aliases: getSessionTimeStamp
> 
> ### ** Examples
> 
> DatumString <- c("2015-08-27 18:59:25.328383+02", "2015-08-27 18:59:25.328383+02", "2015-08-27 18:59:25.328383+02")
> 
> 
> 
> cleanEx()
> nameEx("getVorname")
> ### * getVorname
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getVorname
> ### Title: getVorname
> ### Aliases: getVorname
> 
> ### ** Examples
> 
> Spielername <- c("Fiedler, Harald", "Mayer, Jan", "A-Team")
> getVorname(Spielername = Spielername)
[1] "Harald" "Jan"    NA      
> 
> 
> 
> cleanEx()
> nameEx("istFormatNachnameKommaVorname")
> ### * istFormatNachnameKommaVorname
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: istFormatNachnameKommaVorname
> ### Title: istFormatNachnameKommaVorname
> ### Aliases: istFormatNachnameKommaVorname
> 
> ### ** Examples
> 
> Spielername <- c("Fiedler, Harald", "Mayer, Jan", "A-Team")
> istFormatNachnameKommaVorname(Spielername = Spielername)
[1]  TRUE  TRUE FALSE
> 
> 
> 
> cleanEx()
> nameEx("readItemBank")
> ### * readItemBank
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: readItemBank
> ### Title: readItemBank
> ### Aliases: readItemBank
> 
> ### ** Examples
> 
> ItemBank <- readItemBank()
> head(ItemBank)
  ItemID a          b c d adrM adrW  RW   AW
1   CS01 1  0.0000000 0 1   64   68 -20   NA
2   CS02 1  1.4700236 0 1   28   72 140 -160
3   CS03 1 -0.7700552 0 1   64   54  50   40
4   CS04 1  0.2591781 0 1   10   22 -60 -140
5   CS05 1 -0.4609686 0 1   64   70 -30  150
6   CS06 1 -0.7415591 0 1   64   56  40   30
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.734 0.022 1.755 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
